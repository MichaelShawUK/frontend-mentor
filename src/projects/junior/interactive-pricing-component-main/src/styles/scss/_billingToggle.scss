@use "colors" as c;
@use "sass:math";

@function toggle-size($width, $height) {
  $border-gap: math.floor(math.div($width, 10));
  $border-radius: math.div($height, 2);
  $switch-size: $height - ($border-gap * 2);
  $translateX: $width - $switch-size - ($border-gap * 2);

  @return (
    "width": $width,
    "height": $height,
    "border-gap": $border-gap,
    "border-radius": $border-radius,
    "switch-size": $switch-size,
    "translateX": $translateX
  );
}

$size: toggle-size(42px, 22px);

.billing-toggle {
  display: grid;
  grid-template-columns: 1fr max-content 1fr;
  align-items: center;
  gap: 12px;
  margin-block: 30px;

  label {
    background-color: c.$toggle-bg;
    width: map-get($size, "width");
    height: map-get($size, "height");
    border-radius: map-get($size, "border-radius");
    cursor: pointer;

    position: relative;

    &:hover {
      background-color: c.$soft-cyan;
    }

    &::before {
      content: "";
      height: map-get($size, "switch-size");
      width: map-get($size, "switch-size");
      display: block;
      background-color: c.$white;
      border-radius: 50%;
      visibility: visible;
      position: absolute;
      top: map-get($size, "border-gap");
      left: map-get($size, "border-gap");
      transition: 0.2s ease-in-out;
    }
  }

  input {
    visibility: hidden;
  }

  label:has(input:checked) {
    background-color: c.$strong-cyan;

    &::before {
      transform: translateX(map-get($size, "translateX"));
    }

    &:hover {
      &::before {
        background-color: c.$soft-cyan;
      }
    }
  }

  span {
    color: c.$light-red-text;
    background-color: c.$light-red-bg;
    font-size: 11px;
    font-weight: 800;
    padding: 4px 8px;
    border-radius: 13px;
    margin-left: 10px;
    position: absolute;
  }

  .monthly {
    text-align: right;
  }
  .yearly {
    text-align: left;
  }

  p {
    font-size: clamp(11px, 3.5vw, 15px);
  }
}
